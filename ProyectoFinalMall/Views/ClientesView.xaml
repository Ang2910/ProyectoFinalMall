<UserControl x:Class="ProyectoFinalMall.Views.ClientesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProyectoFinalMall.Views"
             xmlns:v1="clr-namespace:ProyectoFinalMall.ViewModels"
             mc:Ignorable="d" 
             Name="ventana"  
             d:DesignHeight="565" d:DesignWidth="1050" Background="Transparent">

    <UserControl.DataContext>
        <v1:ClienteViewModel></v1:ClienteViewModel>
    </UserControl.DataContext>
 
    <UserControl.Resources>


        <DockPanel Background="FloralWhite" x:Key="VerMercanciaYClientes">
            <TextBlock DockPanel.Dock="Top" FontSize="36">Lista Clientes y Mercancia</TextBlock>
            <DockPanel DockPanel.Dock="Bottom">
                <StackPanel> 
                    <Button  Content="Regresar"  Command="{Binding RegresarCommand}" Margin="5" Background="MediumPurple">
                    </Button>
                </StackPanel>
            </DockPanel>
            <ScrollViewer DockPanel.Dock="Top">
                <ItemsControl ItemsSource="{Binding ListaVista}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Black" CornerRadius="5" Padding="20"
                                Background="FloralWhite" Margin="5">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontFamily" Value="Verdana"></Setter>
                                            <Setter Property="FontSize" Value="20"></Setter>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock><Run FontWeight="Bold" Text="Cliente"></Run>
<Run Text="{Binding NombreCliente}"></Run>
                                    </TextBlock>
                                    <TextBlock><Run FontWeight="Bold" Text="Mercancia"></Run>
<Run Text="{Binding NombreMercancia}"></Run>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>

        <DockPanel x:Key="Editar">
            <Border Padding="10" DockPanel.Dock="Top" BorderThickness="0,0,0,2" BorderBrush="Black" >
                <TextBlock FontSize="20">Modificar cliente</TextBlock>
            </Border>
  
            <StackPanel Margin="20">
                <Label>Nombre:</Label>
                <TextBox Text="{Binding cliente.Nombre}"></TextBox>

                <Label>Correo electrónico:</Label>
                <TextBox Text="{Binding cliente.Correo}"></TextBox>

                <Label>IdRol:</Label>
                <TextBox Text="{Binding cliente.IdRol}"></TextBox>

                <WrapPanel HorizontalAlignment="Center" Margin="20">
                    <Button Padding="10,5" Command="{Binding GuardarClienteCommand}">Editar</Button>
                    <Button Padding="10,5" Command="{Binding CancelarCommand}" Margin="10,0,0,0">Cancelar</Button>
                </WrapPanel>
            </StackPanel>

        </DockPanel>


        <DockPanel x:Key="Datos"> 
            <Border Padding="10" DockPanel.Dock="Top" BorderThickness="0,0,0,2" BorderBrush="Black" >
                <TextBlock FontSize="20">Datos cliente</TextBlock>
            </Border>

            <StackPanel Margin="20">
                <Label>Nombre:</Label>
                <TextBox Text="{Binding cliente.Nombre}"></TextBox>

                <Label>Correo electrónico:</Label>
                <TextBox Text="{Binding cliente.Correo}"></TextBox>

                <Label>IdRol:</Label>
                <TextBox Text="{Binding cliente.IdRol}"></TextBox>

                <WrapPanel HorizontalAlignment="Center" Margin="20">
                    
                    <Button Padding="10,5" Command="{Binding CancelarCommand}" Margin="10,0,0,0">Cancelar</Button>
                </WrapPanel>
            </StackPanel>

        </DockPanel>


        <DockPanel x:Key="Eliminar">
            <Border Padding="10" DockPanel.Dock="Top" BorderThickness="0,0,0,2" BorderBrush="Black" >
                <TextBlock FontSize="20">Eliminar cliente</TextBlock>
            </Border>

            <StackPanel Margin="20">
                <Label>Nombre:</Label>
                <TextBox Text="{Binding cliente.Nombre}"></TextBox>

                <WrapPanel HorizontalAlignment="Center" Margin="20">
                    <Button Padding="10,5" Command="{Binding AceptarClienteCommand}">Eliminar</Button>
                    <Button Padding="10,5" Command="{Binding CancelarCommand}" Margin="10,0,0,0">Cancelar</Button>
                </WrapPanel>
            </StackPanel>
        </DockPanel>

        
        <Grid x:Key="Ver"> 


            <Border CornerRadius="20" 
                BorderThickness="4"
                BorderBrush="#2594DE"
                Opacity="0.95"
                >

                <Border.Background>

                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  >

                        <GradientStop Color="PaleVioletRed" Offset="1.0" />
                        <GradientStop Color="LightPink" Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>




            <Grid Name="GridUsuarios" x:Uid="GridUsuarios">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="20" />


                </Grid.RowDefinitions>
              
                
                


                <TextBlock Height="50"  
                       Grid.Row="0" 
                       Grid.ColumnSpan="6" 
                       Text="LISTA DE CLIENTES"     
                       Foreground="Black"  
                       FontWeight="Black"
                       FontStyle="Oblique"
                       FontSize="30" 
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"    
                       />

                <TextBlock Text="Buscar Cliente:" 
                       HorizontalAlignment="Right" 
                       VerticalAlignment="Center"
                       Grid.Column="1"
                       Grid.Row="2"
                       FontSize="15"
                       Margin="0,0,10,0"
                       Foreground="Black"
                       />

                <TextBox Style="{DynamicResource TextBoxStyle1}" 
                     Background="Transparent"
                     BorderBrush="LightCyan"
                     Grid.Column="2"
                     Grid.Row="2"
                     FontSize="20"    
                     Text="{Binding  FiltroNombre, UpdateSourceTrigger=PropertyChanged}"
                     />
                
                <Button Style="{DynamicResource ButtonStyle}" Content="Ver Datos" 
                    Grid.Column="3"
                    Grid.Row="2"
                    HorizontalAlignment="Left"  
                    Margin="10,0,0,0"
                    VerticalAlignment="Top"
                    Width="120"
                    Background="HotPink"
                    BorderBrush="SlateGray"
                    Foreground="White"
                    FontFamily="Arial"
                    FontSize="20"
                    FontStyle="Italic"
                    Command="{Binding VerClientesMercanciaCommand}"    
                    >



                </Button>
               

                <Button Style="{DynamicResource ButtonStyle1}" Background="MediumSlateBlue"
                    BorderBrush="LightSlateGray" 
                    Grid.Column="4"
                    Grid.Row="2"
                    Cursor="Hand"
                    Width="150"
                    Command="{Binding AgregarClienteCommand}"
                    >
                    <TextBlock Text="Agregar Cliente"
                            Foreground="White"
                            FontSize="15"
                            
                    />
                </Button>
                
                

                <DataGrid  Style="{DynamicResource DataGridStyle1}" Grid.Row="4"
                      Grid.Column="1"
                      Grid.RowSpan="2"
                      Grid.ColumnSpan="4"
                      AutoGenerateColumns="False"
                      Background="GhostWhite"
                      Foreground="Black" 
                      FontSize="15"
                      CanUserAddRows="False"
                      CanUserResizeColumns="True"
                      CanUserResizeRows="False"
                      CanUserSortColumns="False"
                      RowBackground="Transparent"
                      HeadersVisibility="Column"
                      GridLinesVisibility="Horizontal"
                      HorizontalGridLinesBrush="#c48b9f"
                      FontWeight="SemiBold"
                      ItemsSource="{Binding ListaClientes}"
                      >



                    <DataGrid.Columns >
                        <DataGridTemplateColumn Header="Opciones del cliente " 
                                            Width="300"
                                            >
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate >
                                    <DockPanel >
                                        <TextBlock FontSize="20"  
                                     
                                    Foreground="Black" ><Hyperlink 
                                    Foreground="Black" Command="{Binding ElementName=ventana,Path=DataContext.EditarClienteCommand}" CommandParameter="{Binding .}">Modificar</Hyperlink></TextBlock>
                                        <TextBlock FontSize="20" ><Hyperlink  
                                    Foreground="Black" Command="{Binding ElementName=ventana, Path=DataContext.EliminarClienteCommand}" CommandParameter="{Binding .}">Eliminar</Hyperlink></TextBlock>
                                        <TextBlock FontSize="20" ><Hyperlink 
                                    Foreground="Black" Command="{Binding ElementName=ventana, Path=DataContext.VerDatosCommand}" CommandParameter="{Binding Id}">Detalles</Hyperlink></TextBlock>








                                    </DockPanel>


                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>



                        </DataGridTemplateColumn >
                        <DataGridTextColumn Header="Nombre" Width="230"  Binding="{Binding Nombre}"  />
                        <DataGridTextColumn Header="Correo" Width="230" Binding="{Binding Correo}"/>
                        <DataGridTextColumn Header="Rol" Width="230" Binding="{Binding IdRol}"/>



                    </DataGrid.Columns>



                </DataGrid>
               

            </Grid>

           


        </Grid>
       
        <StackPanel x:Key="Agregar" Margin="30,30,30,9" Background="LavenderBlush">
            <Label Height="65"
         Foreground="Black"
         Background="Lavender"
         BorderBrush="LavenderBlush"
         FontWeight="Bold"
         FontSize="36"
         HorizontalContentAlignment="Center"
         VerticalContentAlignment="Center"
        BorderThickness="0,0,0,10" FontFamily="Cambria">Registrar Cliente

            </Label>
            <Label FontWeight="Bold" FontFamily="Cambria">Nombre:</Label>
            <TextBox Margin="5" Text="{Binding cliente.Nombre}"></TextBox>

            <Label FontWeight="Bold" FontFamily="Cambria">Correo electrónico:</Label>
            <TextBox Margin="5" Text="{Binding cliente.Correo}"></TextBox>

            <Label FontWeight="Bold" FontFamily="Cambria">Contraseña:</Label>
            <TextBox Margin="5" Text="{Binding cliente.Contrasena}"></TextBox>

            <Label FontWeight="Bold" FontFamily="Cambria">IdRol:</Label>
            <TextBox Margin="5" Text="{Binding cliente.IdRol}"></TextBox>

            <TextBlock Margin="10"
                   Text="{Binding Error}"
                   Foreground="Red" 
                   HorizontalAlignment="Center">
            </TextBlock>
            <WrapPanel HorizontalAlignment="Center" Margin="20">
                <Button  Padding="10,5" Command="{Binding GuardarClienteCommand}" Background="Lavender" FontFamily="Arial Narrow" FontSize="20" Cursor="Hand" Foreground="Black" >Registrarse</Button>
                <Button Padding="10,5" Command="{Binding CancelarCommand}" Margin="10,0,0,0" Background="Lavender" FontSize="20" FontFamily="Arial Narrow" Foreground="Black" FontWeight="Bold" FontStyle="Italic" Cursor="Hand">Cancelar</Button>
            </WrapPanel>
        </StackPanel>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>


        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border CornerRadius="0,0,10,10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background"  Value="WhiteSmoke"/>
            <Setter Property="FontWeight"  Value="SemiBold"/>
            <Setter Property="Height"  Value="20"/>


        </Style>


    </UserControl.Resources>
    <ContentControl >

        <ContentControl.Style>
            <Style TargetType="ContentControl">
                <Setter Property="Content" Value="{StaticResource Ver}"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Modo}" Value="Agregar">
                        <Setter Property="Content" Value="{StaticResource Agregar}"></Setter>
                    </DataTrigger> 
                    <DataTrigger Binding="{Binding Modo}" Value="Editar">
                        <Setter Property="Content" Value="{StaticResource Editar}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Modo}" Value="Eliminar">
                        <Setter Property="Content" Value="{StaticResource Eliminar}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Modo}" Value="VerDatos">
                        <Setter Property="Content" Value="{StaticResource Datos}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Modo}" Value="verClientesMercanciaView">
                        <Setter Property="Content" Value="{StaticResource VerMercanciaYClientes}"></Setter>
                    </DataTrigger> 
                </Style.Triggers>
            </Style>
        </ContentControl.Style>
    </ContentControl>


</UserControl>
